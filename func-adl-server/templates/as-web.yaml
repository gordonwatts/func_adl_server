# Very simple web server to land ast's from the outside world.
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "func-adl-server.fullname" . }}-web
  labels:
    app: {{ template "func-adl-server.name" . }}
    chart: {{ template "func-adl-server.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "func-adl-server.name" . }}-web
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "func-adl-server.name" . }}-web
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: as-web
          image:  {{ .Values.images.func_adl_utils }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          command:
            - gunicorn
            - --bind
            - 0.0.0.0:8000
            - -w
            - "4"
            - --log-file
            - "-"
            - --log-level
            - debug
            - query_web:__hug_wsgi__
          ports:
            - containerPort: 8000
          env:
            - name: RABBIT_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq
                  key: rabbitmq-password
            - name: RABBIT_USER
              value: user
            - name: RABBIT_NODE
              value: {{ .Release.Name }}-rabbitmq
            - name: FILE_URL
              value: root://{{ .Values.external_interface.node_name}}:{{ .Values.external_interface.xrootd_port }}//
{{- if .Values.external_interface.local_machine_prefix }}
            - name: LOCAL_FILE_URL
              value: {{ .Values.external_interface.local_machine_prefix }}
{{- end }}           
            - name: HTTP_PREFIX
              value: http://{{ .Values.external_interface.node_name}}:{{ .Values.external_interface.results_http_port }}/