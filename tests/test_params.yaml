# Run on the laptop

rucio:
  username: gwatts
  certpass: mass2000
  VOMS: atlas
  local_data_cache: /C/Users/gordo/Documents/GRIDDS
  local_cert_dir: /C/Users/gordo/OneDrive/.ssh/rucio-config/usercert

func_adl:
  # This will keep pre-generated C++ around between invocations
  cpp_cache: /C/Users/gordo/Documents/Code/IRIS-HEP/func-adl-server-cache/cpp
  # Results of the query calculations
  results:
    cache: /C/Users/gordo/Documents/Code/IRIS-HEP/func-adl-server-cache/results
    # Define this so that the web server will return a local version of the path to the results.
    # Makes it possible to do a local file open for results. The most obvious thing is to
    # prefix the cache with "file://" on linux/mac and "file:///" on windows. Below is an example
    # from windows.
    local_machine_prefix: file:///C:\Users\gordo\Documents\Code\IRIS-HEP\func-adl-server-cache\results\

# Use a custom port incase it is running against something else!
external_interface:
  xrootd_port: 31001
  web_port: 31000

images:
  pullPolicy: IfNotPresent
#   xaod_runner: func_adl_cpp_runner:latest
#   desktop_rucio: func-adl-rucio:latest

mongodb:
  image:
    pullPolicy: IfNotPresent

# Use a username and password so we know how to get into the monitor
# port when we expose it. Username is "user".
rabbitmq:
  image:
    pullPolicy: IfNotPresent
